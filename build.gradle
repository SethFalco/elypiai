plugins {
    id "java"
    id "idea"
    id "maven"
    id "maven-publish"
    id "jacoco"
    id "com.jfrog.bintray" version "1.8.0"
}

String projectName = 'Elypiai'
String projectVersion = '1.0.6'
String projectDescription = "All in one API wrapper."
String projectGit = 'https://gitlab.com/Elypia/Elypiai.git'

jar {
    from sourceSets.main.allSource

    manifest {
        attributes 'Implementation-Title'   : projectName,
                   'Implementation-Version' : projectVersion
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir

    javadoc {
        options {
            links += [
                'https://docs.oracle.com/javase/9/docs/api/'
            ]
        }
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Elypiai']

    pkg {
        repo = projectName
        name = projectName
        userOrg = 'elypia'
        licenses = ['Apache-2.0']
        vcsUrl = projectGit

        version {
            name = projectVersion
            desc = projectDescription
            released = new Date()
        }
    }
}

publishing {
    def details = {
        licenses{
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution projectName
            }
        }

        developers{
            developer {
                id 'Seth'
                name 'Seth'
                email "seth@elypia.com"
            }
        }

        scm{
            url projectGit
        }
    }

    publications {
        Elypiai(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'com.elypia'
            artifactId 'elypiai'
            version projectVersion

            pom.withXml {
                def root = asNode()

                root.appendNode('description', projectDescription)
                root.appendNode('name', projectName)
                root.appendNode('url', 'https://elypia.com/')
                root.children().last() + details
            }
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    implementation group: 'org.json', name: 'json', version: '20180130'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.11'

    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'

    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.2.0'
    testRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.2.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

    reports {
        html.enabled = false
    }
}

jacoco {
    toolVersion = "0.8.1"
}

task wrapper(type: Wrapper) {
    description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '4.7'
}
